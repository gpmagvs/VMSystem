<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="internal-nlog-AspNetCore.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- 變數:LOG位置 -->
	<variable name="logDirectory" value="C:/AGVSystemLog/VMSLog/" />
	<variable name="dateFolder" value="${logDirectory}/${date:format=yyyy-MM-dd}"/>
	<variable name="hourFileName" value="${date:format=yyyy-MM-dd HH}.log"/>
	<variable name="textLogLineLayout" value="${longdate} |${level}| [${logger}] ${message}  ${exception:format=ToString,Data:maxInnerExceptionLevel=10}" />
	<variable name="consoleLogLineLayout" value="[${longdate}] | ${logger}| ${level}| ${message}  ${exception:format=ToString,Data:maxInnerExceptionLevel=10}" />
	<variable name="ownFileWebLogLineLayout" value="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}" />
	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<!--<target xsi:type="File" name="allfile" fileName="c:\temp\nlog-AspNetCore-all-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />-->

		<!-- 文件目标，根據日期和類別名稱分資料夾 -->
		<target xsi:type="File" keepFileOpen="false" concurrentWrites="true" name="each-logger" fileName="${dateFolder}/${logger:shortName=true}/${hourFileName}"
				layout="${textLogLineLayout}" />


		<target xsi:type="File" keepFileOpen="false" concurrentWrites="true"  name="vehicle-state" fileName="${dateFolder}/${logger}/${hourFileName}"
				layout="${textLogLineLayout}" />

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" keepFileOpen="false" concurrentWrites="true"  name="ownFile-web" fileName="${dateFolder}/nlog-AspNetCore-own-${shortdate}.log"
				layout="${ownFileWebLogLineLayout}" />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console"  name="console-log" layout="${consoleLogLineLayout}" />

		<!-- EF Core Target -->
		<target xsi:type="File" keepFileOpen="false" concurrentWrites="true"  name="efcore" fileName="${dateFolder}/EFCore/${hourFileName}"
				layout="${textLogLineLayout}" />

		<target name="async-all-in-one" xsi:type="AsyncWrapper"
				queueLimit="5000"
				overflowAction="Discard">
			<target xsi:type="File"
					keepFileOpen="false"
					concurrentWrites="false"
					openFileCacheTimeout="30"
					name="all-in-one"
					fileName="${dateFolder}/${hourFileName}"
					layout="${textLogLineLayout}"
					bufferSize="32768"/>
		</target>

	</targets>

	<!-- rules to map from logger name to target -->
	<rules>

		<!-- 忽略規則 |  maxlevel="Warning" => 表示僅記錄Warning以上 -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" final="true" />
		<logger name="System.Net.Http.*" minlevel="Info" final="true" />
		<logger name="Microsoft.EntityFrameworkCore.*" minlevel="Warning" writeTo="efcore" final="true"/>
		<logger name="Microsoft.*"  maxlevel="Warning"  final="true" />
		<logger name="VehicleState/*" minlevel="Trace" writeTo="vehicle-state" final="true"/>
		<logger name="AGVSystemCommonNet6.AGVDispatch.*"  maxlevel="Warning"  final="true" />
		<logger name="*" minlevel="Trace" writeTo="each-logger" />
		<logger name="*" minlevel="Trace" writeTo="async-all-in-one" />
		<logger name="*" minlevel="Info" writeTo="console-log" />
		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="*" minlevel="Info" writeTo="ownFile-web" />

	</rules>
</nlog>